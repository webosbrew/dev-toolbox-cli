{
  "name": "libnss_mdns-0.2.so",
  "needed": [
    "libc.so.6",
    "libgcc_s.so.1"
  ],
  "symbols": [
    "ConvertHeaderBytes",
    "DNSServiceAddRecord",
    "DNSServiceBrowse",
    "DNSServiceConstructFullName",
    "DNSServiceCreateConnection",
    "DNSServiceEnumerateDomains",
    "DNSServiceErrorCodeToString",
    "DNSServiceGetAddrInfo",
    "DNSServiceGetPID",
    "DNSServiceGetProperty",
    "DNSServiceNATPortMappingCreate",
    "DNSServiceProcessResult",
    "DNSServiceQueryRecord",
    "DNSServiceQueryRecordInternal",
    "DNSServiceReconfirmRecord",
    "DNSServiceRefDeallocate",
    "DNSServiceRefSockFD",
    "DNSServiceRegister",
    "DNSServiceRegisterRecord",
    "DNSServiceRemoveRecord",
    "DNSServiceResolve",
    "DNSServiceSetDefaultDomainForUser",
    "DNSServiceSleepKeepalive",
    "DNSServiceSleepKeepalive_sockaddr",
    "DNSServiceUpdateRecord",
    "MDNS_VERBOSE",
    "TXTRecordContainsKey",
    "TXTRecordCreate",
    "TXTRecordDeallocate",
    "TXTRecordGetBytesPtr",
    "TXTRecordGetCount",
    "TXTRecordGetItemAtIndex",
    "TXTRecordGetLength",
    "TXTRecordGetValuePtr",
    "TXTRecordRemoveValue",
    "TXTRecordSetValue",
    "VersionString_SCCS_libdnssd",
    "_nss_mdns_gethostbyaddr_r",
    "_nss_mdns_gethostbyname2_r",
    "_nss_mdns_gethostbyname_r",
    "af_to_rr",
    "af_to_str",
    "cmp_dns_suffix",
    "config_is_mdns_suffix",
    "count_dots",
    "format_reverse_addr",
    "format_reverse_addr_in",
    "format_reverse_addr_in6",
    "g_config_mutex",
    "get_rdata",
    "get_required_tlv_length",
    "get_required_tlv_uint32_length",
    "get_required_tlv_uint8_length",
    "get_string",
    "get_tlv",
    "get_tlv_uint32",
    "get_uint16",
    "get_uint32",
    "init_config",
    "islocal",
    "k_comment_char",
    "k_conf_file",
    "k_default_domains",
    "k_empty_config",
    "k_keyword_domain",
    "mdns_lookup_callback",
    "ns_class_to_str",
    "ns_type_to_str",
    "put_rdata",
    "put_string",
    "put_tlv",
    "put_tlv_uint16",
    "put_tlv_uint32",
    "put_tlv_uint8",
    "put_uint16",
    "put_uint32",
    "rr_to_af",
    "str_to_af",
    "str_to_ns_class",
    "str_to_ns_type"
  ]
}